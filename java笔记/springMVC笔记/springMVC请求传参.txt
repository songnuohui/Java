传参的基本的操作:
	把内容写到方法(HandlerMethod)参数中,SpringMVC只要有这个内容,就会注入内容
1.基本数据类型的参数
	1.1,默认保证参数名称和请求中传递的参数名相同:例:public String demo(String name,int age){}

	1.2,如果请求参数名和方法参数名不对应,使用@RequestParam赋值:例:public String demo(@RequestParam(value="name1")
	String name,@RequestParam(value="age1")int age){}

	1.3,如果方法参数是基本数据类型(不是封装类)可以通过@RequestParam设置默认值.(防止没有参数时报500)
	例:@RequestMapping("page")
	public String page(@RequestParam(defaultValue="2")int pageSize,@RequestParam(defaultValue="1") intpageNumber){}
	
	1.4,如果强制要求必须有某个参数public String demo2(@RequestParam(required=true)String name){}

2.HandlerMethod中的参数时对象类型
	2.1,请求参数名和对象中的属性名对应(get/set方法)例:public String demo4(People peo){}

3.请求参数中包含多个同名参数的获取方式
	3.1复选框传递的参数就是多个同名的参数(jsp中的代码:多个<input type="CheckBox" name="hover" value="任意取"/>)
	例:控制器的方法是:public String demo5(String name,int age,@RequestParam("hover")List<String> abc)
4.请求参数中:对象.属性格式
	4.1 jsp代码:<input type="text" name="peo.name"/><input type="text" name="peo.age"/>
	4.2新建一个类:public class Demo{private People peo;}
	4.3,控制器的方法:public String demo6(Demo demo){}
5.在请求参数中传递的是集合对象参数类型
	5.1,jsp代码:<input type="text" name="peo[0].name"/> <input type="text" name="peo[0].age"/>
	    <input type="text" name="peo[1].name"/><input type="text" name="peo[1].age"/>
	5.2,新建类:public class Demo{private List<People> peo;}
	5.3,控制器的方法:public String demo6(Demo demo){}
6.restful传值方式:(目前最常用的传值方式:简化jsp中的传参编写格式(/项目名/控制器地址?name=""&age="")):
	6.1,jsp的特定格式:<a href="demo8/123/abc">跳转</a>
	6.2,在控制器中
		6.2.1,在@RequestMapping 中一定要和请求格式对应
		6.2.2{名称}中名称自定义名称
		6.2.3@PathVariable 获取@RequestMapping 中内容,默认按照方法参数名称去寻找
		代码:例:@RequestMapping("demo8/{id1}/{name}")
			public String demo8(@PathVariable String name,@PathVariable("id1") int age){}