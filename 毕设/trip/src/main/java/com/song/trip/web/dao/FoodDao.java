package com.song.trip.web.dao;

import com.song.trip.web.domain.Food;
import com.song.trip.web.domain.FoodExample;
import com.song.trip.web.domain.Reply;
import com.song.trip.web.domain.Words;

import java.util.List;

public interface FoodDao {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_food
     *
     * @mbg.generated
     */
    int deleteByPrimaryKey(Integer tpFid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_food
     *
     * @mbg.generated
     */
    int insert(Food record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_food
     *
     * @mbg.generated
     */
    int insertSelective(Food record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_food
     *
     * @mbg.generated
     */
    List<Food> selectByExampleWithBLOBs(FoodExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_food
     *
     * @mbg.generated
     */
    List<Food> selectByExample(FoodExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_food
     *
     * @mbg.generated
     */
    Food selectByPrimaryKey(Integer tpFid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_food
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(Food record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_food
     *
     * @mbg.generated
     */
    int updateByPrimaryKeyWithBLOBs(Food record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tp_food
     *
     * @mbg.generated
     */
    int updateByPrimaryKey(Food record);
    /**
     * 美食模糊查询
     * **/
    List<Food> foodPointSearch(Food food);

    /**
     * 查询四个美食信息
     * **/
    List<Food> foodFourPoints(FoodExample foodExample);
    /**
     * 保存留言
     * @param words
     * @return
     */
    void saveWords(Words words);

    /**
     * 保存回复信息
     * @param reply
     */
    void saveReply(Reply reply);

    /**
     * 查询所有留言信息
     * @return
     */
    List<Words> findByWords();

    /**
     * 	查询所有回复信息
     */
    List<Reply> findByReply();

}