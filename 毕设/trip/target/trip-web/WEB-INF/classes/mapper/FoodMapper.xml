<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.song.trip.web.dao.FoodDao">
  <resultMap id="BaseResultMap" type="com.song.trip.web.domain.Food">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="tp_fid" jdbcType="INTEGER" property="tpFid" />
    <result column="tp_ftitle" jdbcType="VARCHAR" property="tpFtitle" />
    <result column="tp_fname" jdbcType="VARCHAR" property="tpFname" />
    <result column="tp_address" jdbcType="VARCHAR" property="tpAddress" />
    <result column="tp_fpic" jdbcType="VARCHAR" property="tpFpic" />
    <result column="tp_fprice" jdbcType="INTEGER" property="tpFprice" />
    <result column="tp_phone" jdbcType="VARCHAR" property="tpPhone" />
    <result column="tp_fcreated" jdbcType="TIMESTAMP" property="tpFcreated" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.song.trip.web.domain.Food">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="tp_fcontent" jdbcType="LONGVARCHAR" property="tpFcontent" />
  </resultMap>



  <!--Words-->
  <resultMap id="WordsBaseMap" type="com.song.trip.web.domain.Words">
    <id column="lw_id" property="lw_id" jdbcType="INTEGER"/>
    <result column="lw_name" property="lw_name" jdbcType="VARCHAR"/>
    <result column="lw_date" property="lw_date" jdbcType="VARCHAR"/>
    <result column="lw_content" property="lw_content" jdbcType="VARCHAR"/>
    <result column="lw_for_name" property="lw_for_name" jdbcType="VARCHAR"/>
    <result column="lw_for_article_id" property="lw_for_article_id" jdbcType="VARCHAR"/>
    <result column="lw_forumId" property="lw_forumId" jdbcType="VARCHAR"/>
    <result column="lw_hotel_id" property="lw_hotel_id" jdbcType="VARCHAR"/>
    <result column="lw_food_id" property="lw_food_id" jdbcType="VARCHAR"/>
  </resultMap>

  <!--Reply-->
  <resultMap id="ReplyBaseMap" type="com.song.trip.web.domain.Reply">
    <id column="lr_id" property="lr_id" jdbcType="INTEGER"/>
    <result column="lr_name" property="lr_name" jdbcType="VARCHAR"/>
    <result column="lr_date" property="lr_date" jdbcType="VARCHAR"/>
    <result column="lr_content" property="lr_content" jdbcType="VARCHAR"/>
    <result column="lr_for_name" property="lr_for_name" jdbcType="VARCHAR"/>
    <result column="lr_for_words" property="lr_for_words" jdbcType="VARCHAR"/>
    <result column="lr_for_article_id" property="lr_for_article_id" jdbcType="VARCHAR"/>
    <result column="lr_forumId" property="lr_forumId" jdbcType="VARCHAR"/>
    <result column="lr_hotel_id" property="lr_hotel_id" jdbcType="VARCHAR"/>
    <result column="lr_food_id" property="lr_food_id" jdbcType="VARCHAR"/>
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    tp_fid, tp_ftitle, tp_fname, tp_address, tp_fpic, tp_fprice, tp_phone, tp_fcreated
  </sql>
  <sql id="Blob_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    tp_fcontent
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.song.trip.web.domain.FoodExample" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tp_food
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.song.trip.web.domain.FoodExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from tp_food
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from tp_food
    where tp_fid = #{tpFid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from tp_food
    where tp_fid = #{tpFid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.song.trip.web.domain.Food">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tp_food (tp_fid, tp_ftitle, tp_fname, 
      tp_address, tp_fpic, tp_fprice, 
      tp_phone, tp_fcreated, tp_fcontent
      )
    values (#{tpFid,jdbcType=INTEGER}, #{tpFtitle,jdbcType=VARCHAR}, #{tpFname,jdbcType=VARCHAR}, 
      #{tpAddress,jdbcType=VARCHAR}, #{tpFpic,jdbcType=VARCHAR}, #{tpFprice,jdbcType=INTEGER}, 
      #{tpPhone,jdbcType=VARCHAR}, #{tpFcreated,jdbcType=TIMESTAMP}, #{tpFcontent,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.song.trip.web.domain.Food">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into tp_food
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="tpFid != null">
        tp_fid,
      </if>
      <if test="tpFtitle != null">
        tp_ftitle,
      </if>
      <if test="tpFname != null">
        tp_fname,
      </if>
      <if test="tpAddress != null">
        tp_address,
      </if>
      <if test="tpFpic != null">
        tp_fpic,
      </if>
      <if test="tpFprice != null">
        tp_fprice,
      </if>
      <if test="tpPhone != null">
        tp_phone,
      </if>
      <if test="tpFcreated != null">
        tp_fcreated,
      </if>
      <if test="tpFcontent != null">
        tp_fcontent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="tpFid != null">
        #{tpFid,jdbcType=INTEGER},
      </if>
      <if test="tpFtitle != null">
        #{tpFtitle,jdbcType=VARCHAR},
      </if>
      <if test="tpFname != null">
        #{tpFname,jdbcType=VARCHAR},
      </if>
      <if test="tpAddress != null">
        #{tpAddress,jdbcType=VARCHAR},
      </if>
      <if test="tpFpic != null">
        #{tpFpic,jdbcType=VARCHAR},
      </if>
      <if test="tpFprice != null">
        #{tpFprice,jdbcType=INTEGER},
      </if>
      <if test="tpPhone != null">
        #{tpPhone,jdbcType=VARCHAR},
      </if>
      <if test="tpFcreated != null">
        #{tpFcreated,jdbcType=TIMESTAMP},
      </if>
      <if test="tpFcontent != null">
        #{tpFcontent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.song.trip.web.domain.Food">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tp_food
    <set>
      <if test="tpFtitle != null">
        tp_ftitle = #{tpFtitle,jdbcType=VARCHAR},
      </if>
      <if test="tpFname != null">
        tp_fname = #{tpFname,jdbcType=VARCHAR},
      </if>
      <if test="tpAddress != null">
        tp_address = #{tpAddress,jdbcType=VARCHAR},
      </if>
      <if test="tpFpic != null">
        tp_fpic = #{tpFpic,jdbcType=VARCHAR},
      </if>
      <if test="tpFprice != null">
        tp_fprice = #{tpFprice,jdbcType=INTEGER},
      </if>
      <if test="tpPhone != null">
        tp_phone = #{tpPhone,jdbcType=VARCHAR},
      </if>
      <if test="tpFcreated != null">
        tp_fcreated = #{tpFcreated,jdbcType=TIMESTAMP},
      </if>
      <if test="tpFcontent != null">
        tp_fcontent = #{tpFcontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where tp_fid = #{tpFid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.song.trip.web.domain.Food">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tp_food
    set tp_ftitle = #{tpFtitle,jdbcType=VARCHAR},
      tp_fname = #{tpFname,jdbcType=VARCHAR},
      tp_address = #{tpAddress,jdbcType=VARCHAR},
      tp_fpic = #{tpFpic,jdbcType=VARCHAR},
      tp_fprice = #{tpFprice,jdbcType=INTEGER},
      tp_phone = #{tpPhone,jdbcType=VARCHAR},
      tp_fcreated = #{tpFcreated,jdbcType=TIMESTAMP},
      tp_fcontent = #{tpFcontent,jdbcType=LONGVARCHAR}
    where tp_fid = #{tpFid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.song.trip.web.domain.Food">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update tp_food
    set tp_ftitle = #{tpFtitle,jdbcType=VARCHAR},
      tp_fname = #{tpFname,jdbcType=VARCHAR},
      tp_address = #{tpAddress,jdbcType=VARCHAR},
      tp_fpic = #{tpFpic,jdbcType=VARCHAR},
      tp_fprice = #{tpFprice,jdbcType=INTEGER},
      tp_phone = #{tpPhone,jdbcType=VARCHAR},
      tp_fcreated = #{tpFcreated,jdbcType=TIMESTAMP}
    where tp_fid = #{tpFid,jdbcType=INTEGER}
  </update>



  <!--美食模糊查询-->
  <select id="foodPointSearch" resultMap="BaseResultMap">
    SELECT
    <include refid="Base_Column_List" />
    FROM
    tp_food
    <where>

      <if test="tpFprice != null and tpFprice != ''">
        or tp_fprice LIKE concat('%', #{tpFprice}, '%')
      </if>

      <if test="tpFname != null and tpFname != ''">
        or tp_fname  LIKE concat('%', #{tpFname}, '%')
      </if>

      <if test="tpAddress != null and tpAddress != ''">
        or tp_address  LIKE concat('%', #{tpAddress}, '%')
      </if>
    </where>
  </select>

  <!--查询四个美食信息-->
  <select id="foodFourPoints" resultMap="ResultMapWithBLOBs">
    select * from tp_food order by tp_fid desc limit 4;
  </select>
  <!-- 保存留言信息 -->
  <insert id="saveWords" parameterType="com.song.trip.web.domain.Words">
        insert into words(
          lw_name,
          lw_date,
          lw_content,
          lw_for_name,
          lw_for_article_id,
          lw_forumId,
          lw_hotel_id,
          lw_food_id
        )
        values(
          #{lw_name},
          #{lw_date},
          #{lw_content},
          #{lw_for_name},
          #{lw_for_article_id},
          #{lw_forumId},
          #{lw_hotel_id},
          #{lw_food_id}
        )
    </insert>

  <!-- 保存回复信息 -->
  <insert id="saveReply" parameterType="com.song.trip.web.domain.Reply">
        insert into reply(
          lr_name,
          lr_date,
          lr_content,
          lr_for_name,
          lr_for_words,
          lr_for_reply,
          lr_for_article_id,
          lr_forumId,
          lr_hotel_id,
          lr_food_id
        )
        values(
          #{lr_name},
          #{lr_date},
          #{lr_content},
          #{lr_for_name},
          #{lr_for_words},
          #{lr_for_reply},
          #{lr_for_article_id},
          #{lr_forumId},
          #{lr_hotel_id},
          #{lr_food_id}
        )
    </insert>

  <!-- 查询所有留言信息 -->
  <select id="findByWords" resultMap="WordsBaseMap">
        select * from words
    </select>

  <!-- 查询所有回复信息 -->
  <select id="findByReply" resultMap="ReplyBaseMap">
        select * from reply
    </select>
</mapper>