1:oracle数据库基础
    数据类型：
   数值：        number
          number   任意范围
          number(3) -999-999
          number(5,2) -999.99-999.99
    字符串：
         char        定长的  最大长度2000
         varchar     变长的  最大长度4000
         varchar2    改良后的varchar最大长度4000       
         char(3)     存在ab-->    "ab "
         varchar(3)  存在ab-->    "ab"
   时间： 
       date   timestamp       
  大字段类型    
           clob    以字符串存储的大字段类型 最大4G
           blob    以二进制存储的大字段类型 最大4G 
           
 ddl语句  database defined language 数据库定义语言
     create table 表名(
               列名1   数据类型,
               ....
              列名n   数据类型
     )
    alter table 表名  更新表：
      1：添加新的列
       alter table 表名  
         add 列名 数据类型;
      2:修改列的数据类型
        alter table 表名  
         modify 列名 新的数据类型; 
      3：修改列名  
       alter table 表名  
       rename column 列名 to 新的列名  ;
      4:删除列
       alter table 表名 
        drop column 列名 ;
      5:重命名表
          rename 表名  to 新的表名;
   删除表：
       drop table  表名;       删除表结构与数据
       truncate table  表名;   删除表数据保留表结构
          
 dml  database manipulate language 数据库操纵语言    
     添加：
      insert into 表名(列名1,....列名n)   
                values(值1,.....  值n) ;
       commit;  
   修改:
      update 表名 set  列名1=新的值1,....列名n=新的值n
                  where 列名m=xxxx ; 
                   commit;  
  删除:
      delete from  表名     where 列名m=xxxx ; 
      
 dql  database query language 数据库查询语言  
   select
   
   1:笛卡尔积
           n表做连接 有效条件低于 n-1个 产生
           比如 a表(n条数据) b表(m条数据)两表做连接 
           没有有效连接条件返回 n*m条件数据
           
   2：内连接   n表做连接 有效条件不低于 n-1个 
                         仅仅返回符合条件的记录
        a:等值
        b:非等值
        c:自连接     
        
        关键字: 
                 比较   =  >   < >=  <=   !=  <>
             in     between n  and   m   
             like  _ 任意一个字符
                   % 任意多个字符 0-n
               is null   is not null   
             and  or  not     
      自身函数：
             字符函数：
               length(列名) 
               substr(列名,int begin,int count)
               substr(列名,int begin)
               lpad(列名,长度,'不足时替补的字符')
               rpad(列名,长度,'不足时替补的字符')  
               replace(列名，源内容，替换的新内容)   
               concat(列名,列名)  相当  ||
               trim(列名)
               instr(列名,要查找的内容)
               lower(列名);
               upper(列名);
               initcap(列名)
         时间函数：   
               sysdate  系统当前时间
               months_between(时间1,时间2)
                                    时间2-时间1之间的月份差
               add_months(时间列,值)  
               last_day(时间列) 获取时间列所在月份的最后一天
               next_day(时间列,1-7) 时间列所在的下一个星期几是哪天              
    数值函数：
         round(数值列,有效位数)
         round(3.56,1)  3.6
         round(13.56,-1)  10
         trunc(数值列,有效位数)
         trunc(3.56,1)  3.5
                  
    转换函数：
         to_number(字符列) 
         to_char(时间列,'yyyyMMddHH24miss')
         to_date(字符列,'yyyyMMddHH24miss')   
   通用函数：
      nvl(列名,列null的时候替换的值)   
     nvl2(列名,列不为null的时候替换的值,列null的时候替换的值)
     case 列名
          when 值 then 返回值
          ....
          when 值 then 返回值
          else
                     其他返回值
         end;   
      decode(列名,值1,返回值,
                  ....
                                    值n,返回值n,
                                   其他返回值
            );            
       
                  
           
   3:外连接  n表做连接 有效条件不低于 n-1个
                      返回符合条件的记录 和主表不符合条件的记录
        a:左外连接
        b:右外连接
        c:全外连接              
   
 分页：  查询表 从 n条 到m条 记录
  select * from    
        (select e.*,rownum n from emp  e) t
           where t.n>5
             and t.n<11
                         
    select * from    
        (select e.*,rownum n from emp  e where rownum <11) t
           where t.n>5
           
     
       select * from  emp where rowid in
        (select t.rid from 
        (select rowid rid,rownum n from emp  e where rownum <11)t
           where t.n>5)
           
  表约束：
     1:主键约束：primary key(列名1,...列名n);
     
  alter table  表名
    add constraint 约束名 primary key(列名) ;
    
   2:外键  foreign key(列名)  references 表名(列名)
   
   alter table  本表名
    add constraint 约束名 foreign key(本表列名) 
          references 引用表名(引用表列名);  
                
  3：检查约束  check 
         alter table  表名
    add constraint 约束名 check (列名 与条件表达式) ;
    
  4： not null    default  
     
   
  范式：
             第一范式： 列不可再分
             第二范式： 先满足第一范式 +行可以唯一区分（主键约束）
             
              第三范式：本表的非主属性如果要依赖其他表的话
                                不依赖其他表的非主属性  （外键约束）   
                                
数据库其他对象：
   1：序列    sequence  一般用在oracle主键生成策略
   
   create sequence 序列名
      start with 开始值
      increment by 增长值
      maxvalue  最大值
      cycle 如果有就可以循环 没有就不能循环      
    drop  sequence 序列名;
    
  2: 索引   相当与书的书签 可以提升查询效率
                     降低 插入和修改数据的效率
     create index on 表名(列名) ;
   
        一般用在经常查询的列 主键默认有索引
        
  3：视图  view  虚拟表 查询的结果集
  
              好处：已经编译执行的对象 效率更高
                        提升数据的安全性
                        
     create view 视图名 as  select 查询子句;
     
     视图： with check option
         with read only;
           
    
    
    
          
     
                    
     
   
     
   
   
                                     
                   
                              
               
    
    
     
           
              
         
